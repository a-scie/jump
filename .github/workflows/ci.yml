name: CI
on:
  push:
    branches-ignore:
      - dependabot/**
  pull_request:
defaults:
  run:
    shell: bash
concurrency:
  group: CI-${{ github.ref }}
  # Queue on all branches and tags, but only cancel overlapping PR burns.
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/') }}
jobs:
  org-check:
    name: Check GitHub Organization
    if: github.repository_owner == 'a-scie'
    runs-on: ubuntu-22.04
    steps:
      - name: Noop
        run: "true"
  ci:
    needs: org-check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # N.B.: macos-13 is the oldest non-deprecated Intel Mac runner and macos-14 is the oldest
        # non-deprecated ARM Mac runner.
        os: [ linux-arm64, macos-13, macos-14, windows-2022, windows-arm64 ]
        include:
          - os: ubuntu-22.04
            target: x86_64
          - os: ubuntu-22.04
            target: armv7l
    steps:
      - uses: actions/checkout@v4
      - name: Check Formatting
        run: |
          rustup toolchain add nightly -c rustfmt
          cargo +nightly fmt --check --all
      - name: Lint
        run: cargo clippy --locked --all
      - name: Unit Tests
        run: cargo test --all
      - name: Build & Package
        if: ${{ runner.os != 'Linux' }}
        run: cargo run -p package
      - name: Build & Package
        if: ${{ runner.os == 'Linux' && matrix.target != 'armv7l' }}
        run: |
          docker run --rm \
            -v $PWD:/code \
            -w /code \
            rust:1.83.0-alpine3.20 \
              sh -c "
                apk add musl-dev &&
                addgroup -g $(id -g) build &&
                adduser -u $(id -u) -G build -D -H build &&
                su build -c 'cargo run -p package -- dist'
              "
      - name: Build & Package
        if: ${{ matrix.target == 'armv7l' }}
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker build . \
            -f Dockerfile.armv7l \
            -t jump/armv7l
          docker cp $(docker create jump/armv7l):/code/dist .
      - name: Integration Tests
        if: ${{ matrix.target != 'armv7l' }}
        run: examples/run.sh --no-package
      - name: Integration Tests
        if: ${{ matrix.target == 'armv7l' }}
        run: |
          docker run --rm \
            -v $PWD:/code \
            -w /code \
            --platform=linux/arm/v7 \
            ubuntu:22.04 \
              bash -c "
                apt-get update &&
                apt-get --no-install-recommends install -y git jq curl ca-certificates &&
                git config --global --add safe.directory /code &&
                ./examples/run.sh --no-package
              "
